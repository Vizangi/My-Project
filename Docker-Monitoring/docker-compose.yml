configs:
  postgres_exporter_config:
    file: ./queries.yml

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring-stack/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - network_monitoring
    restart: unless-stopped

  postgres-exporter-pgserver94:
    image: wrouesnel/postgres_exporter:latest
    configs:
      - source: postgres_exporter_config
        target: /etc/postgres_exporter/queries.yml
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres@pgserver94.example.com:5432/postgres?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yml

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - network_monitoring
    restart: unless-stopped

  blackbox_exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    ports:
      - "9115:9115"
    networks:
      - network_monitoring
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - network_monitoring
    restart: unless-stopped

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    environment:
      - NGINX_SCRAPE_URI=http://nginx:80
    networks:
      - network_monitoring
    restart: unless-stopped

  custom_exporter_bash:
    image: alpine:latest
    container_name: custom_exporter_bash
    command: >
      sh -c "apk add --no-cache curl && while true; do curl http://example.com; sleep 10; done"
    networks:
      - network_monitoring
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - network_monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - network_monitoring
    restart: unless-stopped

  postgresql:
    image: postgres:latest
    container_name: postgresql
    environment:
      POSTGRES_DB: credit_conveyor
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - network_monitoring
    restart: unless-stopped

  postgresql-exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgresql-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@postgresql:5432/credit_conveyor?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - network_monitoring
    restart: unless-stopped

  process-exporter:
    image: ncabatoff/process-exporter:latest
    container_name: process-exporter
    ports:
      - "9256:9256"
    networks:
      - network_monitoring
    restart: unless-stopped

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - "9091:9091"
    networks:
      - network_monitoring
    restart: unless-stopped

volumes:
  grafana-storage:
  prometheus-data:
  postgresql-data:

networks:
  network_monitoring:
