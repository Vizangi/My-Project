networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  es_data:
  pg_data:

services:
  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    networks:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - node-exporter
      - postgres-exporter
      - alertmanager

  # Grafana
  grafana:
    image: grafana/grafana:latest
    networks:
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:latest
    networks:
      - monitoring
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    networks:
      - monitoring
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml

  # PostgreSQL + Exporter
  postgres:
    image: postgres:14
    networks:
      - monitoring
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: pgpassword
    volumes:
      - pg_data:/var/lib/postgresql/data

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    networks:
      - monitoring
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:pgpassword@postgres:5432/postgres?sslmode=disable"
    depends_on:
      - postgres

  # ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    networks:
      - monitoring
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.0
    networks:
      - monitoring
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0
    networks:
      - monitoring
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    networks:
      - monitoring
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    networks:
      - monitoring
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Тестовое приложение
  python-app:
    build: ./python-app
    networks:
      - monitoring
    ports:
      - "5000:5000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
